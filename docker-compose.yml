version: '3.8'

services:
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql:delegated
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --skip-ssl
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
      interval: 5s
    deploy:
      resources:
        limits:
          memory: 1G

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 256M

  web:
    build: .
    command: >
      sh -c "
        python manage.py migrate &&
        ./entrypoint.sh
      "
    volumes:
      - .:/app
    env_file:
      - ${ENV_FILE:-.env}
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=api.django.${ENVIRONMENT:-dev}
      - ENVIRONMENT=${ENVIRONMENT:-dev}
      - DEBUG=${DEBUG:-True}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=db
      - MYSQL_PORT=${MYSQL_PORT}
      - SECRET_KEY=${SECRET_KEY}
      - SIGNING_KEY=${SIGNING_KEY}
      - DISCORD_KEY=${DISCORD_KEY}
      - API_BASE_URL=${API_BASE_URL:-http://web:8000}
      - MYSQL_SSL_CA=${MYSQL_SSL_CA:-}
      - MYSQL_SSL_CERT=${MYSQL_SSL_CERT:-}
      - MYSQL_SSL_KEY=${MYSQL_SSL_KEY:-}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/1}
      - CACHE_TTL=${CACHE_TTL:-900}
      - CACHE_KEY_PREFIX=${CACHE_KEY_PREFIX:-trivia_api}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  bot:
    build: .
    command: >
      sh -c "
        sleep 30 &&  # Increased delay to allow migrations
        ./bot-entrypoint.sh
      "
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=api.django.${ENVIRONMENT:-development}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DEBUG=${DEBUG:-True}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - SECRET_KEY=${SECRET_KEY}
      - SIGNING_KEY=${SIGNING_KEY}
      - DISCORD_KEY=${DISCORD_KEY}
    depends_on:
      db:
        condition: service_healthy
      web:
        condition: service_started

volumes:
  mysql_data:
    driver: local
    name: trivia_mysql_data
  redis_data:
    driver: local
    name: trivia_redis_data
